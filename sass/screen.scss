@charset "UTF-8";
@import "base";

// ==============
// DIMENSIONS
// ==============
$wide: 10%;
$wide-stance: 80%;
$narrow: 5%;
$tiny: 2%;

$box-border: .2em;
$default-corner: .5em;

$break1: 900px;
$break2: 500px;

///////// colors /////
$fallback: rgb(255, 255, 255) transparent;
$see-thru: rgba(255,255,255,.75);

/////////////////////// DECORATIONS ////////////////////////

html {
  background: lightgreen;
  // http://css-tricks.com/css3-gradients/
  // http://compass-style.org/examples/compass/css3/gradient/
  // https://github.com/chriseppstein/compass/issues/401
  @include background-image(repeating-linear-gradient(45deg, lightgreen, lightgreen 100px, mediumaquamarine 100px, mediumaquamarine 200px));
}

html.cat {
  background: url(http://i.imgur.com/GgvLwHV.gif) no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

body > header,
body > footer,
div.about,
.cat article,
section.single {
  background-color: $fallback;
  background-color: $see-thru;
}

section.single,
div.about,
.cat article {
  @include border-radius($default-corner, $default-corner);
}

img {
  border: $box-border solid black;
}

hr {
  background-color: white;
  color: white;
}

article hr {
  background-color: black;
  color: black;
}

.ghost::before {
	content: "ðŸ‘»";
    padding-right: 5em;
    font-style: normal;
    /* position: fixed or absolute is absolutely essential and nobody told me */
    position: absolute;
    -webkit-animation: ghost 4s linear infinite;
    -moz-animation: ghost 4s linear infinite;
    -o-animation: ghost 4s linear infinite;
    animation: ghost 4s linear infinite;
}

.one::before {
  -webkit-animation-delay: -1s;
  -moz-animation-delay: -1s;
  -o-animation-delay: -1s;
  animation-delay: -1s;
}

.two::before {
  -webkit-animation-delay: -2s;
  -moz-animation-delay: -2s;
  -o-animation-delay: -2s;
  animation-delay: -2s;
}
.three::before {
  -webkit-animation-delay: -3s;
  -moz-animation-delay: -3s;
  -o-animation-delay: -3s;
  animation-delay: -3s;
}

@-moz-keyframes ghost {
  from {
    -moz-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -moz-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-webkit-keyframes ghost {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes ghost {
  from {
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

//////////////////////////////////////////////////////////////
/////////////////////////// LAYOUT ///////////////////////////
/////////////////////////////////////////////////////////////

body {
  font-size: 16pt;
}

body {
  & > header,
  & > footer {
    clear: both;
    text-align: center;
  }
}

body > header > h1 {
  padding-top: .1em;
}

body > header > h2 {
  padding-bottom: .5em;
}

main {
  width: 90%;

  margin: 0 auto;
  text-align: center;
}

/* need two-element section->div structure to mirror two-element
/* section->article structure of .primary and keep y-positions the same */
section.about {
  float: left;
  width: 35%;
}
div.about {
  padding-right: 1em;
  padding-bottom: .1em;
  padding-left: 1em;
  text-align: left;
  h2 {
    padding-top: .375em;
  }
}

section.index {
  float: right;
  width: 60%;

  margin-bottom: 1em;
}

.cat article {
  padding-right: 1em;
  padding-bottom: .1em;
  padding-left: 1em;

  h2 {
    padding-top: .375em;
  }
  &:nth-of-type(odd) {
    @include rotate(10deg);
  }
  &:nth-of-type(even) {
    @include rotate(-10deg);
  }
  &:hover {
    @include rotate(0deg);
  }
}

article,
section.single {
  text-align: left;
}

section.single,
.sub article {
  width: 50%;
  margin: inherit;
}

section.single {
  padding: .1em 1em;
}

.single {
	main > footer {
		color: white;
	}
}

h2,
h3,
h4,
h5,
h6 {
  line-height: 100%;
}

h1 {
  font-size: 300%;
}

h2 {
  font-size: 225%;
}

h3 {
  font-size: 150%;
}

h4 {
  font-size: 131.25%;
}

h5,
h6 {
  font-size: 112.5%;
}

h1 + h2 {
  margin-top: -1em;
}

/* http://unstoppablerobotninja.com/entry/fluid-images/ */
// /* needs width: 100% in IE stylesheet */
img,
object,
iframe {
  max-width: 100%;
}
img {
  margin: .5em 0 .5em 0;
  height: auto;
  @media screen and (max-width: $break2) {
    float: none;
  }
}

hr {
  height: .125em;
  width: 50%;
  border: 0;
}

article hr {
  height: .125em;
  width: 50%;
  border: 0;
}

//////////////////////// media queries ..................///////////////
@media screen and (max-width: $break1) {
  section.about,
  section.index {
    float: none;
    width: 80%;
    margin: inherit;
  }
  section.about {
    padding: .1em 1em;
  }
  section.single,
  .sub article {
    width: 80%;
  }
  h1 {
    font-size: 225%;
  }

  h2 {
    font-size: 150%;
  }

  h3 {
    font-size: 131.25%;
  }

  h4,
  h5,
  h6 {
    font-size: 112.5%;
  }
}

@media screen and (max-width: $break2) {
  body {
    font-size: 14pt;
  }
	main {
		margin: 0;
	}
  section.about,
  section.index {
    width: auto;
  }
  section.single {
    width: 100%;
  }
  .sub article {
    width: auto;
  }
.cat article {
  &:nth-of-type(odd) {
    @include rotate(5deg);
  }
  &:nth-of-type(even) {
    @include rotate(-5deg);
  }
  &:hover {
    @include rotate(inherit);
  }
}
  h1 {
    font-size: 171.5%;
  }

  h2 {
    font-size: 150%;
  }

  h3 {
    font-size: 128.5%;
  }

  h4,
  h5,
  h6 {
    font-size: 114.3%;
  }
}
